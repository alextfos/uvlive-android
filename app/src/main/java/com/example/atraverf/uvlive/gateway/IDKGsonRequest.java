package com.example.atraverf.uvlive.gateway;

import com.android.volley.Response;
import com.android.volley.VolleyLog;

import com.google.gson.Gson;

import java.io.UnsupportedEncodingException;
import java.util.HashMap;
import java.util.Map;


/**
 * Volley request parsing Json strings using the Gson deserializer
 */
public class IDKGsonRequest<T> extends GsonRequest<T> {

    /** A map containing the common headers of a request. */
    private static final Map<String, String> IDK_HEADERS;
    private static final int HEADERS_SIZE = 3;

    /** Charset for request. */
    private static final String PROTOCOL_CHARSET = "utf-8";

    /** Content type for request. */
    private static final String PROTOCOL_CONTENT_TYPE =
            String.format("application/json; charset=%s", PROTOCOL_CHARSET);

    /** This request priority */
    private final Priority mPriority;

    /** The body of POST/PUT request. */
    private final String mRequestBody;

    static {
        IDK_HEADERS = new HashMap<String, String>(HEADERS_SIZE);
        IDK_HEADERS.put("Accept", "application/vnd.idk.bsmobil-v6+json");
    }

    /** Current application language */
    private String mCurrentAcceptLanguageHeaderValue;

    /**
     * Sets the current application language as the value of the "Accept-Language" header
     *
     * @param currentLanguage
     */
    public void setCurrentAcceptLanguageHeaderValue(String currentLanguage) {
        mCurrentAcceptLanguageHeaderValue = currentLanguage;
    }

    /**
     * Create a new Gson Json-parser request.
     *
     * @param method the Http method see {@link com.android.volley.Request.Method}
     * @param returnType the .class to be used by Gson (e.g. User.class).
     * @param url request url.
     * @param listener response listener.
     * @param errorListener error listener.
     */
    public IDKGsonRequest(final int method, final Class<T> returnType, final String url,
                          final Response.Listener<T> listener, final Response.ErrorListener errorListener) {
        this(method, returnType, url, listener, errorListener, UVLiveGateway.GSON_CREATOR);
    }

    /**
     * Create a new Gson Json-parser request.
     *
     * @param method the Http method see {@link com.android.volley.Request.Method}
     * @param returnType the .class to be used by Gson (e.g. User.class).
     * @param url request url.
     * @param requestBody a string containing the body of a POST/PUT request, usually Json and
     * generated by Gson.
     * @param listener response listener.
     * @param errorListener error listener.
     */
    public IDKGsonRequest(final int method, final Class<T> returnType, final String url,
                          final String requestBody, final Response.Listener<T> listener,
                          final Response.ErrorListener errorListener) {
        this(method, returnType, url, requestBody, listener, errorListener,
                UVLiveGateway.GSON_CREATOR);
    }

    /**
     * Create a new Gson Json-parser request with a custom Gson instance (useful for specifying
     * custom date formats, etc.)
     *
     * @param method the Http method see {@link com.android.volley.Request.Method}
     * @param returnType the .class to be used by Gson (e.g. User.class).
     * @param url request url.
     * @param listener response listener.
     * @param errorListener error listener.
     * @param gson custom Gson instance.
     */
    public IDKGsonRequest(final int method, final Class<T> returnType, final String url,
                          final Response.Listener<T> listener, final Response.ErrorListener errorListener,
                          final Gson gson) {
        this(method, returnType, url, null, listener, errorListener, gson);
    }

    /**
     * Create a new Gson Json-parser request with a custom Gson instance (useful for specifying
     * custom date formats, etc.)
     *
     * @param method the Http method see {@link com.android.volley.Request.Method}
     * @param returnType the .class to be used by Gson (e.g. User.class).
     * @param url request url.
     * @param requestBody a string containing the body of a POST/PUT request, usually Json and
     * generated by Gson.
     * @param listener response listener.
     * @param errorListener error listener.
     * @param gson custom Gson instance.
     */
    public IDKGsonRequest(final int method, final Class<T> returnType, final String url,
                          final String requestBody, final Response.Listener<T> listener,
                          final Response.ErrorListener errorListener, final Gson gson) {
        this(method, returnType, url, requestBody, listener, errorListener, gson, Priority.NORMAL);
    }

    /**
     * Create a new Gson Json-parser request with a custom Gson instance (useful for specifying
     * custom date formats, etc.) and a custom request priority.
     * {@link com.android.volley.Request.Priority}
     *
     * @param method the Http method see {@link com.android.volley.Request.Method}
     * @param returnType the .class to be used by Gson (e.g. User.class).
     * @param url request url.
     * @param requestBody a string containing the body of a POST/PUT request, usually Json and
     * generated by Gson.
     * @param listener response listener.
     * @param errorListener error listener.
     * @param gson custom Gson instance.
     * @param priority the priority to set to this request.
     */
    public IDKGsonRequest(final int method, final Class<T> returnType, final String url,
                          final String requestBody, final Response.Listener<T> listener,
                          final Response.ErrorListener errorListener, final Gson gson, final Priority priority) {
        super(method, returnType, url, listener, errorListener, gson);

        mRequestBody = requestBody;
        mPriority = priority;

        setRetryPolicy(UVLiveGateway.IDK_RETRY_POLICY);
    }
    /*
    @Override
    public Map<String, String> getHeaders() throws AuthFailureError {
        if (SessionManager.isSessionCookieSet()) {
            IDK_HEADERS.put(SessionManager.HEADER_COOKIE, SessionManager.getSessionCookie());
        }
        IDK_HEADERS.put("Accept-Language", mCurrentAcceptLanguageHeaderValue);
        return IDK_HEADERS;
    }
    */
    /**
     * POST/PUT requests will have the content type specified in {@link #PROTOCOL_CONTENT_TYPE}.
     * GET request won't have any content type because they don't have a content body.
     *
     * @return {@link #PROTOCOL_CONTENT_TYPE}
     */
    @Override
    public String getBodyContentType() {
        return PROTOCOL_CONTENT_TYPE;
    }

    @Override
    public byte[] getBody() {
        try {
            return mRequestBody == null ? null : mRequestBody.getBytes(PROTOCOL_CHARSET);
        } catch (UnsupportedEncodingException uee) {
            VolleyLog.wtf("Unsupported Encoding while trying to get the bytes of %s using %s",
                    mRequestBody, PROTOCOL_CHARSET);
            return null;
        }
    }

    @Override
    public Priority getPriority() {
        return mPriority;
    }
}